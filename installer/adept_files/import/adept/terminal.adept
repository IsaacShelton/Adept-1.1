
// -=-=- Adept Terminal "adept/terminal.adept" -=-=-
// Provides useful wrappers to print non-string types

private import "system/io.adept"
private import "system/string.adept"
private import "system/system.adept"
private import "adept/conversion.adept"

public def print(message *ubyte) void {
	fputs(message, fstdout())
}

public def println(message *ubyte) void {
	puts(message)
}

public def print(val bool) void {
	message *ubyte = malloc(6ui)
	fputs(boolToRawString(val, message), fstdout())
	free(message)
}

public def println(val bool) void {
	message *ubyte = malloc(6ui)
	puts(boolToRawString(val, message))
	free(message)
}

public def print(val byte) void {
	message *ubyte = malloc(5ui)
	fputs(byteToRawString(val, message, 10), fstdout())
	free(message)
}

public def println(val byte) void {
	message *ubyte = malloc(5ui)
	puts(byteToRawString(val, message, 10))
	free(message)
}

public def print(val short) void {
	message *ubyte = malloc(7ui)
	fputs(shortToRawString(val, message, 10), fstdout())
	free(message)
}

public def println(val short) void {
	message *ubyte = malloc(7ui)
	puts(shortToRawString(val, message, 10))
	free(message)
}

public def print(val int) void {
	message *ubyte = malloc(12ui)
	fputs(intToRawString(val, message, 10), fstdout())
	free(message)
}

public def println(val int) void {
	message *ubyte = malloc(12ui)
	puts(intToRawString(val, message, 10))
	free(message)
}

public def print(val long) void {
	message *ubyte = malloc(21ui)
	fputs(longToRawString(val, message, 10), fstdout())
	free(message)
}

public def println(val long) void {
	message *ubyte = malloc(21ui)
	puts(longToRawString(val, message, 10))
	free(message)
}

public def print(val float) void {
	message *ubyte = malloc(21ui)
	fputs(floatToRawString(val, message, 4), fstdout())
	free(message)
}

public def println(val float) void {
	message *ubyte = malloc(21ui)
	puts(floatToRawString(val, message, 4))
	free(message)
}

public def print(val double) void {
	message *ubyte = malloc(21ui)
	fputs(doubleToRawString(val, message, 4), fstdout())
	free(message)
}

public def println(val double) void {
	message *ubyte = malloc(21ui)
	puts(doubleToRawString(val, message, 4))
	free(message)
}

public def input(input *ubyte) void {
	gets(input)
}
